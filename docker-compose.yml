version: '3.7'

services:
    node:
        build:
            context: .docker/node
        volumes:
            - ./:/home/app
        working_dir: /home/app
        command: tail -f > /dev/null

    rocketchat:
        image: rocketchat/rocket.chat:latest
        command: bash -c 'for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo "Tried $$i times. Waiting 5 secs..."; sleep 5; done; (exit $$s)'
        volumes:
            - /app/uploads
        environment:
            - PORT=3000
            - ROOT_URL=http://localhost:3000
            - MONGO_URL=mongodb://mongo:27017/rocketchat
            - MONGO_OPLOG_URL=mongodb://mongo:27017/local
            - MAIL_URL=smtp://smtp.email
            - ADMIN_USERNAME=admin
            - ADMIN_PASS=admin
            - ADMIN_EMAIL=admin@example.com
            - OVERWRITE_SETTING_Language=en
            - OVERWRITE_SETTING_Show_Setup_Wizard=completed
            - OVERWRITE_SETTING_Apps_Framework_enabled=true
            - OVERWRITE_SETTING_Apps_Framework_Development_Mode=true
        depends_on:
            - mongo
        ports:
            - 3000:3000

    mongo:
        image: mongo:4.0
        volumes:
            - /data/db
        ports:
            - 27017:27017
        command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

    # this container's job is just run the command to initialize the replica set.
    # it will run the command and remove himself (it will not stay running)
    mongo-init-replica:
        image: mongo:4.0
        command: 'bash -c "for i in `seq 1 30`; do mongo mongo/rocketchat --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
        depends_on:
            - mongo
